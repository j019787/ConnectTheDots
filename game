<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Connect the Dots</title>
    <style>
        body { 
            text-align: center; 
            font-family: Arial, sans-serif; 
            background-color: #87CEEB; /* Light blue background */
        }
        canvas { 
            border: 2px solid black; 
            cursor: pointer; 
            background-color: white;
            display: none; 
        }
        button {
            margin: 10px;
            padding: 20px 40px;
            font-size: 24px;
            border-radius: 10px;
            border: none;
            background-color: #007BFF;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        #nextLevelButton, #gameContainer { display: none; }
        
        #homePage, #creditsPage, #gameContainer {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }
    </style>
</head>
<body>
    <div id="homePage">
        <h1>Connect the Dots</h1>
        <button onclick="showGame()">Play</button>
        <button onclick="showCredits()">Credits</button>
    </div>
    
    <div id="creditsPage" style="display: none;">
        <h1>Credits</h1>
        <p>Game developed by [Your Name]</p>
        <button onclick="showHomePage()">Back</button>
    </div>
    
    <div id="gameContainer">
        <h1>Connect the Dots Game</h1>
        <canvas id="gameCanvas" width="500" height="500"></canvas>
        <br>
        <button onclick="startGame()">Start Game</button>
        <button id="nextLevelButton" onclick="nextLevel()" style="display: none;">Next Level</button>
        <p>Level: <span id="levelDisplay">1</span>/10</p>
        <button onclick="showHomePage()">Home</button>
        <audio id="bgMusic" loop>
            <source src="background-music.mp3" type="audio/mp3">
            Your browser does not support the audio element.
        </audio>
    </div>
    
    <script>
        let canvas = document.getElementById("gameCanvas");
        let ctx = canvas.getContext("2d");
        let dots = [];
        let currentDot = 0;
        let level = 1;
        let maxLevels = 10;

        function showGame() {
            document.getElementById("homePage").style.display = "none";
            document.getElementById("gameContainer").style.display = "flex";
            document.getElementById("gameCanvas").style.display = "block";
            startGame();
        }
        
        function showCredits() {
            document.getElementById("homePage").style.display = "none";
            document.getElementById("creditsPage").style.display = "flex";
        }
        
        function showHomePage() {
            document.getElementById("gameContainer").style.display = "none";
            document.getElementById("creditsPage").style.display = "none";
            document.getElementById("homePage").style.display = "flex";
        }

        function startGame() {
            dots = [];
            currentDot = 0;
            generateDots(level + 3);
            drawDots();
            document.getElementById("nextLevelButton").style.display = "none";
            document.getElementById("levelDisplay").innerText = level;
        }

        function generateDots(count) {
            for (let i = 0; i < count; i++) {
                let x = Math.floor(Math.random() * 450) + 25;
                let y = Math.floor(Math.random() * 450) + 25;
                dots.push({ x, y });
            }
        }

        function drawDots() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = "black";
            ctx.font = "16px Arial";

            for (let i = 0; i < dots.length; i++) {
                ctx.beginPath();
                ctx.arc(dots[i].x, dots[i].y, 8, 0, Math.PI * 2);
                ctx.fill();
                ctx.fillText(i + 1, dots[i].x + 10, dots[i].y + 5);
            }
        }

        canvas.addEventListener("click", function (event) {
            let rect = canvas.getBoundingClientRect();
            let mouseX = event.clientX - rect.left;
            let mouseY = event.clientY - rect.top;

            if (currentDot < dots.length) {
                let dot = dots[currentDot];
                let distance = Math.sqrt(
                    Math.pow(mouseX - dot.x, 2) + Math.pow(mouseY - dot.y, 2)
                );
                if (distance < 10) {
                    if (currentDot > 0) {
                        ctx.beginPath();
                        ctx.moveTo(dots[currentDot - 1].x, dots[currentDot - 1].y);
                        ctx.lineTo(dot.x, dot.y);
                        ctx.strokeStyle = "blue";
                        ctx.lineWidth = 3;
                        ctx.stroke();
                    }
                    currentDot++;
                    if (currentDot === dots.length) {
                        document.getElementById("nextLevelButton").style.display = "block";
                    }
                }
            }
        });

        function nextLevel() {
            if (level < maxLevels) {
                level++;
                startGame();
            } else {
                alert("Congratulations! You completed all levels.");
            }
        }
    </script>
</body>
</html>
